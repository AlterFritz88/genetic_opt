from scipy.optimize import least_squares, minimize

def opt_func(x):
    s = 4
    ans = 1.483995854587431 - 1.07e+00*s+6.38e-04*x[0]-1.64e-04*x[1]-1.28e-02*x[2]+2.79e-01*s**2-2.09e-04*s*x[0]+5.97e-05*s*x[1]-7.77e-03*s*x[2]+3.97e-05*x[0]*x[2]+1.65e-04*x[1]*x[2]+5.95e-02*x[2]**2-3.13e-02*s**3-3.59e-06*s**2*x[0]-6.23e-06*s**2*x[1]+2.02e-03*s**2*x[2]+3.37e-05*s*x[0]*x[2]-5.61e-05*s*x[1]*x[2]-5.59e-03*s*x[2]**2-1.16e-04*x[0]*x[2]**2-1.66e-04*x[1]*x[2]**2-3.34e-02*x[2]**3+1.28e-03*s**4+1.75e-06*s**3*x[0]-1.35e-04*s**3*x[2]-3.10e-06*s**2*x[0]*x[2]+2.53e-06*s**2*x[1]*x[2]+5.60e-04*s**2*x[2]**2-2.02e-06*s*x[0]*x[2]**2+2.10e-05*s*x[1]*x[2]**2-2.54e-03*s*x[2]**3+9.75e-05*x[0]*x[2]**3+6.05e-05*x[1]*x[2]**3+1.55e-02*x[2]**4
    print('true', ans)
    if ans < 0:
        ans = ans
    print(ans)
    return ans

bnds = ((10, 200), (1, 200), (0.1, 1))

res = minimize(opt_func, (60, 110, 0.8), method='COBYLA', bounds=bnds)
print(res)
print(res.x, res.fun)